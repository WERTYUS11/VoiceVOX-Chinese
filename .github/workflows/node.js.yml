name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # 手动触发
jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV  # 提取版本号，比如 v23.1.3 -> 23.1.3
      - name: Upload .exe as artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Upload-File-${{ env.VERSION }}  # 加上版本号，防止重复
          path: ./dist_electron/nsis/VOICEVOX-Web-Setup-${{ env.VERSION }}.exe  # 修复文件名，去掉空格和多余连字符
          if-no-files-found: error  # 文件没找到就报错
          retention-days: 7  # 保留 7 天
          compression-level: 6  # 默认压缩
          overwrite: true  # 覆盖同名 artifact
          include-hidden-files: false  # 不传隐藏文件
      - name: Upload other artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: voicevox-release-files-${{ env.VERSION }}
          path: |
            dist_electron/nsis-web/latest.yml
            dist_electron/nsis-web/voicevox-${{ env.VERSION }}-x64.nsis.7z
            dist_electron/nsis-web/out/voicevox-${{ env.VERSION }}-x64.nsis.7z.*
          if-no-files-found: error
          retention-days: 7
          compression-level: 6
          overwrite: true
          include-hidden-files: false
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 换成 secrets.MY_GITHUB_TOKEN 如果用 PAT
        with:
          tag_name: ${{ github.ref_name }}  # 用 tag 名，比如 v23.1.3
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Download .exe artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: Upload-File-${{ env.VERSION }}
          path: artifacts/
      - name: Download other artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: voicevox-release-files-${{ env.VERSION }}
          path: artifacts/
      - name: Upload .exe to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/VOICEVOX-Web-Setup-${{ env.VERSION }}.exe
          asset_name: VOICEVOX-Web-Setup-${{ env.VERSION }}.exe
          asset_content_type: application/x-msdownload
      - name: Upload .7z
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/voicevox-${{ env.VERSION }}-x64.nsis.7z
          asset_name: voicevox-${{ env.VERSION }}-x64.nsis.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload .7z split files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/voicevox-${{ env.VERSION }}-x64.nsis.7z.*
          asset_name: voicevox-${{ env.VERSION }}-x64.nsis.7z.*
          asset_content_type: application/octet-stream
