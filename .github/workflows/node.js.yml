
```yaml
# 自动化构建并发布 Release 的 GitHub Actions 脚本
# 当推送 tag 时，自动生成提交日志并上传所有指定文件到 GitHub Releases

name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      # 1. 检出代码（带完整历史记录）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      # 3. 安装 pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # 4. 安装项目依赖
      - name: Install dependencies
        run: pnpm install

      # 5. 构建 Electron 应用
      - name: Build Electron app
        run: pnpm electron:build
        env:
          VITE_APP_NAME: voicevox

      # 6. 生成提交日志
      - name: Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          git log $(git describe --tags --abbrev=0 --always)^..HEAD --oneline --no-merges | sed 's/^/- /' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      # 7. 创建 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            VoiceVOX-Chinese ${{ github.ref_name }}   
            自上次 tag 以来的更新：  
            ${{ env.CHANGELOG }}  
            


      # 9. 上传 .exe 文件
      - name: Upload .exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/VOICEVOX Web Setup ${{ github.ref_name }}.exe
          asset_name: VOICEVOX Web Setup ${{ github.ref_name }}.exe
          asset_content_type: application/x-msdownload

      # 10. 上传 .7z 文件
      - name: Upload .7z
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/voicevox-${{ github.ref_name }}-x64.nsis.7z
          asset_name: voicevox-${{ github.ref_name }}-x64.nsis.7z
          asset_content_type: application/x-7z-compressed

      # 11. 上传 .7z.0 分片
      - name: Upload .7z.0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/out/voicevox-${{ github.ref_name }}-x64.nsis.7z.0
          asset_name: voicevox-${{ github.ref_name }}-x64.nsis.7z.0
          asset_content_type: application/x-7z-compressed

      # 12. 上传 .7z.1 分片
      - name: Upload .7z.1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/out/voicevox-${{ github.ref_name }}-x64.nsis.7z.1
          asset_name: voicevox-${{ github.ref_name }}-x64.nsis.7z.1
          asset_content_type: application/x-7z-compressed

      # 13. 上传 .7z.ini 文件
      - name: Upload .7z.ini
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/out/voicevox-${{ github.ref_name }}-x64.nsis.7z.ini
          asset_name: voicevox-${{ github.ref_name }}-x64.nsis.7z.ini
          asset_content_type: text/plain
