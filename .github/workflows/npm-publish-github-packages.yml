name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # 手动触发
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV  # 提取版本号，比如 v23.1.3 -> 23.1.3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 换成 secrets.MY_GITHUB_TOKEN 如果用 PAT
        with:
          tag_name: ${{ github.ref_name }}  # 用 tag 名，比如 v23.1.3
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload .exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/VOICEVOX Web Setup ${{ env.VERSION }}.exe
          asset_name: VOICEVOX Web Setup ${{ env.VERSION }}.exe
          asset_content_type: application/x-msdownload
      - name: Upload .7z
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/voicevox-${{ env.VERSION }}-x64.nsis.7z
          asset_name: voicevox-${{ env.VERSION }}-x64.nsis.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload .7z split files and .ini
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/nsis-web/out/voicevox-${{ env.VERSION }}-x64.nsis.7z.*
          asset_name: voicevox-${{ env.VERSION }}-x64.nsis.7z.*
          asset_content_type: application/octet-stream
